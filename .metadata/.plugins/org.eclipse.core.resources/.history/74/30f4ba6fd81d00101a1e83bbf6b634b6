import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class WordTutor {

    private static final String DATA_FILE = "data.dat";
    private static List<Question> questions = new ArrayList<>();
    private static int currentQuestionIndex = 0;
    private static JFrame studyFrame;
    private static JLabel questionLabel;
    private static JTextField answerField;
    private static JTextArea resultTextArea;
    private static TrayIcon trayIcon;
    private static boolean answerShown = false;
    private static Point initialClick;

    private static class Question {
        String question;
        String answer;

        public Question(String question, String answer) {
            this.question = question;
            this.answer = answer;
        }
    }

    public static void main(String[] args) {
        // AWT 이벤트 스레드에서 GUI 생성 및 실행
        SwingUtilities.invokeLater(() -> {
            if (!SystemTray.isSupported()) {
                System.out.println("SystemTray is not supported");
                return;
            }

            PopupMenu popup = new PopupMenu();
            MenuItem startItem = new MenuItem("학습 시작");
            MenuItem exitItem = new MenuItem("종료");

            // 학습 시작 메뉴 아이템 액션 리스너
            startItem.addActionListener(e -> showStudyWindow());

            // 종료 메뉴 아이템 액션 리스너
            exitItem.addActionListener(e -> {
                SystemTray.getSystemTray().remove(trayIcon);
                System.exit(0);
            });

            popup.add(startItem);
            popup.add(exitItem);

            // 트레이 아이콘 설정
            Image image = Toolkit.getDefaultToolkit().getImage("icon.png"); // icon.png 파일 필요
            trayIcon = new TrayIcon(image, "WordTutor", popup); // 프로젝트 이름 변경
            trayIcon.setImageAutoSize(true);

            try {
                SystemTray.getSystemTray().add(trayIcon);
            } catch (AWTException e) {
                System.out.println("TrayIcon could not be added.");
            }

            loadQuestions(); // 문제 데이터 로드
            showStudyWindow(); // 프로그램 시작 시 바로 학습 시작
        });
    }

    private static void loadQuestions() {
        try (Scanner scanner = new Scanner(new File(DATA_FILE), "UTF-8")) {
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine().trim();
                if (!line.isEmpty()) {
                    String[] parts = line.split("@@@");
                    if (parts.length == 2) {
                        questions.add(new Question(parts[0].trim(), parts[1].trim()));
                    } else {
                        System.err.println("잘못된 형식의 줄 발견: " + line);
                    }
                }
            }
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, DATA_FILE + " 파일을 찾을 수 없습니다.", "오류", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
    }

    private static void showStudyWindow() {
        if (studyFrame == null || !studyFrame.isShowing()) {
            studyFrame = new JFrame("WordTutor"); // 프로젝트 이름 변경
            studyFrame.setUndecorated(true); // 윈도우 테두리 제거
            studyFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE); // 창을 닫아도 프로그램 종료 X
            studyFrame.setLayout(new BorderLayout()); // BorderLayout 사용
            studyFrame.setResizable(false); // 수동 크기 조절 비활성화

            // 드래그 기능 구현
            JPanel titleBar = new JPanel(new FlowLayout(FlowLayout.LEFT));
            titleBar.addMouseListener(new MouseAdapter() {
                public void mousePressed(MouseEvent e) {
                    initialClick = e.getPoint();
                    studyFrame.getComponentAt(initialClick);
                }
            });
            titleBar.addMouseMotionListener(new MouseMotionAdapter() {
                @Override
                public void mouseDragged(MouseEvent e) {
                    // get location of Window
                    int thisX = studyFrame.getLocation().x;
                    int thisY = studyFrame.getLocation().y;

                    // determine how much the mouse moved since the initial click
                    int xMoved = e.getX() - initialClick.x;
                    int yMoved = e.getY() - initialClick.y;

                    // move window to this position
                    int X = thisX + xMoved;
                    int Y = thisY + yMoved;
                    studyFrame.setLocation(X, Y);
                }
            });
            studyFrame.add(titleBar, BorderLayout.NORTH);

            questionLabel = new JLabel("", SwingConstants.CENTER); // 가운데 정렬
            questionLabel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10)); // 여백 추가
            studyFrame.add(questionLabel, BorderLayout.CENTER);

            JPanel inputPanel = new JPanel(new BorderLayout()); // 입력 필드와 결과 라벨을 BorderLayout으로 변경
            answerField = new JTextField(20);
            answerField.setHorizontalAlignment(JTextField.CENTER); // 텍스트 필드 가운데 정렬
            inputPanel.add(answerField, BorderLayout.NORTH); // 텍스트 필드를 NORTH에 배치

            resultTextArea = new JTextArea(3, 20); // 3행 20열의 텍스트 영역 생성
            resultTextArea.setLineWrap(true); // 긴 텍스트를 자동으로 줄바꿈
            resultTextArea.setWrapStyleWord(true); // 단어 단위로 줄바꿈
            resultTextArea.setEditable(false); // 사용자가 편집할 수 없도록 설정
            JScrollPane resultScrollPane = new JScrollPane(resultTextArea); // 스크롤 기능 추가
            inputPanel.add(resultScrollPane, BorderLayout.SOUTH); // 결과 텍스트 영역을 SOUTH에 배치

            studyFrame.add(inputPanel, BorderLayout.SOUTH); // 입력 패널을 SOUTH에 배치

            showQuestion();
            studyFrame.pack(); // 프레임 크기를 내용물에 맞게 자동 조절
            studyFrame.setLocationRelativeTo(null); // 화면 중앙에 표시
            studyFrame.setVisible(true);
        } else {
            studyFrame.toFront();
        }
    }

    private static void showQuestion() {
        answerShown = false;
        resultTextArea.setText("");
        if (!questions.isEmpty() && currentQuestionIndex < questions.size()) {
            questionLabel.setText(questions.get(currentQuestionIndex).question);
            answerField.setText("");
            adjustFrameSize(true); // 세로로 늘어나도록 조절
            answerField.requestFocusInWindow(); // 답변 필드에 포커스
        } else {
            JOptionPane.showMessageDialog(studyFrame, "모든 문제를 완료했습니다.", "알림", JOptionPane.INFORMATION_MESSAGE);
            currentQuestionIndex = 0;
            showQuestion();
        }
    }

    private static void checkAnswer() {
        if (!answerShown && !questions.isEmpty() && currentQuestionIndex < questions.size()) {
            String userAnswer = answerField.getText().trim();
            String correctAnswer = questions.get(currentQuestionIndex).answer;

            resultTextArea.setText("정답: '" + correctAnswer + "'\n입력: '" + userAnswer + "'"); // JTextArea에 결과 표시
            if (userAnswer.equals(correctAnswer)) {
                resultTextArea.setForeground(Color.BLUE);
            } else {
                resultTextArea.setForeground(Color.RED);
            }
            adjustFrameSize(true); // 세로로 늘어나도록 조절
            answerShown = true;
        } else if (answerShown) {
            currentQuestionIndex++;
            showQuestion();
        }
    }

    private static void adjustFrameSize(boolean verticalOnly) {
        if (studyFrame != null) {
            Dimension currentSize = studyFrame.getSize();
            studyFrame.pack();
            Dimension newSize = studyFrame.getSize();
            if (verticalOnly) {
                studyFrame.setSize(currentSize.width, newSize.height);
            } else {
                studyFrame.setSize(newSize);
            }
            studyFrame.setLocationRelativeTo(null); // 화면 중앙 유지
        }
    }
}